cache:
  paths:
   - node_modules/

stages:
  - build
  - publish
  - Dependency Track

build-asset:
  stage: build
  image: node:16-alpine3.16
  only:
    - master
    - next
    - merge_requests
  script:
    - npm ci
    - npm run link-module
    - npm run build
    - cyclonedx-npm --output-format XML --output-file bom.xml
  artifacts:
    paths:
      - dist

publish package to npm repository:
  stage: publish
  image: node:lts-buster-slim
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install --only=dev
  only:
    refs:
      - master
      - next
  script:
    - npm run semantic-release

publish to gitlab.com:
  stage: publish
  image: appropriate/curl
  only:
    - master
  script:
    # Publish code to GitLab.com
    - curl -X POST -F token=$PIVEAU_PUBLISH_TOKEN -F ref=master -F "variables[VAR_PROJECT_PATH]=$CI_PROJECT_PATH " -F "variables[VAR_PROJECT_NAME]=$CI_PROJECT_NAME" https://gitlab.fokus.fraunhofer.de/api/v4/projects/9624/trigger/pipeline

dependency-track:
stage: Dependency Track
image:
name: node:14.16
entrypoint: ['']
script:
  - npm install --silent
  - npm run sbom
  - |
    curl --location --request POST 'https://dps-dependencytrack-api.fokus.fraunhofer.de/v1/bom' 
    -H 'Content-Type: multipart/form-data' -H 'X-Api-Key: 'odt_Bwcj1EhF3VdUZyNheVwyR8leTb55biQZ'' 
    -F 'project='$PROJECT_UUID'' -F 'bom=@./bom.json';
  - |
    curl --location --request POST 'https://dps-dependencytrack-api.fokus.fraunhofer.de/v1/project' \
    -H 'X-Api-Key: 'odt_Bwcj1EhF3VdUZyNheVwyR8leTb55biQZ''  \
    -H 'Content-Type: application/json' \
    --data-raw '{"uuid": "'$PROJECT_UUID'","name": "project name","version": "'$VERSION'"}'
only:
  - DependencyTrack
