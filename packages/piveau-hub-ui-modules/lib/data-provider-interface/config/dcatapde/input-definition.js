import language from '../selector-languages.json';
import config from './page-content-config';
import Vue from 'vue';
import Vuex from 'vuex';

Vue.use(Vuex);
const dcatapProperties = {
  datasets: {
    // Dcatap.de Properties #### Start ####
    politicalGeocodingLevelURI: {
      identifier: 'politicalGeocodingLevelURI',
      type: 'autocomplete-input',
      name: 'dcatde:politicalGeocodingLevelURI',
      class: 'property',
      voc: 'political-geocoding-level',
      multiple: true,
      '@dcatDE': true,
      '@change': true,
    },
    politicalGeocodingURI: {
      identifier: 'politicalGeocodingURI',
      type: "group",
      name: 'dcatde:politicalGeocodingURI',
      repeatable: true,
      '@change': true,
      class: 'property',
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'politicalGeocodingURI',
          type: 'conditional-input',
          name: 'dcatde:politicalGeocodingURI',
          '@dcatDE': true,
          '@change': true,
          options: {
            voc: 'Choose from vocabulary',
            man: 'Manually submit information',
          },
          data: {
            voc: [
              {
                identifier: 'politicalGeocodingURI',
                type: 'conditional-input',
                name: 'geoCodingURIVoc',
                options: {
                  municipalityKey: 'Municipality Key',
                  regionalKey: 'Regional Key',
                  municipalAssociationKey: 'Municipal Association Key',
                  districtKey: 'District Key',
                  governmentDistrictKey: 'Government District Key',
                  stateKey: 'State Key'
                },
                '@change': true,
                data: {
                  municipalityKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-municipality-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                  regionalKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-regional-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                  municipalAssociationKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-municipal-association-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                  districtKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-district-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                  governmentDistrictKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-government-district-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                  stateKey: [
                    {
                      identifier: 'politicalGeocodingURI',
                      type: 'autocomplete-input',
                      voc: 'political-geocoding-state-key',
                      name: '@id',
                      '@change': true,
                    },
                  ],
                },
              },
            ],
            man: [
              {
                identifier: 'politicalGeocodingURIUrl',
                type: 'custom-url',
                name: 'geoCodingURIMan',
                validation: 'optional|url',
                '@change': true,
              },
            ],
          },
        }
      ]
    },
    availabilityDE: {
      identifier: 'availabilityDE',
      type: 'autocomplete-input',
      name: 'dcatap:availability',
      class: 'property',
      voc: 'planned-availability',
      '@dcatDE': true,
      '@change': true,
    },
    geocodingDescription: {
      identifier: 'geocodingDescription',
      type: 'group',
      name: 'dcatde:geocodingDescription',
      class: 'property langDescriptionInput',
      '@dcatDE': true,
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'geocodingDescription',
          type: 'textarea',
          name: '@value',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    legalBasis: {
      identifier: 'legalBasis',
      type: 'group',
      name: 'dcatde:legalBasis',
      class: 'property langDescriptionInput',
      '@dcatDE': true,
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'legalBasis',
          type: 'textarea',
          name: '@value',
          class: 'w-100 inputTextfield',
          '@change': true,

        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    qualityProcessURI: {
      identifier: 'qualityProcessURI',
      name: 'dcatde:qualityProcessURI',
      class: 'property',
      type: 'custom-url',
      
      '@change': true,
      '@dcatDE': true,

    },
    references: {
      identifier: 'references',
      name: 'dct:references',
      class: 'property',
      type: 'custom-url',
      voc: 'planned-availability',
      '@change': true,
      '@dcatDE': true,
    },
    contributor: {
      identifier: 'contributor',
      type: 'group',
      name: 'dct:contributor',
      class: 'property',
      repeatable: true,
      '@dcatDE': true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'contributorType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'vcard:Individual': 'Person',
            'vcard:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'contributorEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'contributorName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'contributorHomepage',
          type: 'custom-url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    contributorID: {
      identifier: 'contributorID',
      type: 'autocomplete-input',
      name: 'dcatde:contributorID',
      class: 'property',
      voc: 'contributors',
      multiple: true,
      '@dcatDE': true,
      '@change': true,
    },
    originator: {
      identifier: 'originator',
      type: 'group',
      name: 'dcatde:originator',
      class: 'property',
      repeatable: true,
      '@dcatDE': true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'originatorType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'vcard:Individual': 'Person',
            'vcard:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'originatorEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'originatorName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'originatorHomepage',
          type: 'custom-url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    maintainer: {
      identifier: 'maintainer',
      type: 'group',
      name: 'dcatde:maintainer',
      class: 'property',
      repeatable: true,
      '@dcatDE': true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'maintainerType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'vcard:Individual': 'Person',
            'vcard:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'maintainerEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'maintainerName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'maintainerHomepage',
          type: 'custom-url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    // Dcatap.de Properties #### End ####
    datasetID: {
      identifier: 'datasetID',
      type: 'unique-identifier-input',
      mandatory: true,
      name: 'datasetID',
      class: 'property mandatory',
      '@change': true,
    },
    description: {
      identifier: 'datasetDescription',
      type: 'group',
      name: 'dct:description',
      class: 'property langDescriptionInput mandatory',
      repeatable: true,
      mandatory: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'w-100 inputTextfield',
          '@change': true,
          
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          validation: 'required',
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    title: {
      identifier: 'title',
      type: 'group',
      name: 'dct:title',
      class: 'property langStringInput mandatory',
      repeatable: true,
      mandatory: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'titleLabel',
          type: 'text',
          name: '@value',
          validation: 'required',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          validation: 'required',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    contactPoint: {
      identifier: 'contactPoint',
      type: 'group',
      name: 'dcat:contactPoint',
      class: 'property',
      '@repeatableRemoved': true,
      repeatable: true,
      children: [
        {
          identifier: 'contactPointType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'vcard:Individual': 'Person',
            'vcard:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'contactPointName',
          type: 'text',
          name: 'vcard:fn',
          '@change': true,
        },
        {
          identifier: 'contactPointEmail',
          type: 'email',
          name: 'vcard:hasEmail',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'contactPointAddress',
          type: 'group',
          name: 'vcard:hasAddress',
          children: [
            {
              identifier: 'contactPointAddressStreet',
              type: 'text',
              name: 'vcard:street_address',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressPostcode',
              type: 'text',
              name: 'vcard:postal_code',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressCity',
              type: 'text',
              name: 'vcard:locality',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressCountry',
              type: 'text',
              name: 'vcard:country_name',
              '@change': true,
            },
          ],
        },
        {
          identifier: 'contactPointTelephone',
          type: 'tel',
          name: 'vcard:hasTelephone',
          '@change': true,
        },
        {
          identifier: 'contactPointUrl',
          type: 'custom-url',
          name: 'vcard:hasURL',
          validation: 'optional|url',
          '@change': true,
        },
        {
          identifier: 'contactPointOrganisationName',
          type: 'text',
          name: 'vcard:hasOrganizationName',
          '@change': true,
        },
      ],
    },
    subject: {
      identifier: 'subject',
      type: 'autocomplete-input',
      name: 'dct:subject',
      multiple: true,
      annifTheme: true,
      class: 'property',
      voc: 'eurovoc',
      '@change': true,
      '@annifSuggestion': false,
    },
    keyword: {
      identifier: 'keywordHeader',
      type: 'group',
      name: 'dcat:keyword',
      class: 'property langStringInput',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'keyword',
          type: 'text',
          name: '@value',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          name: '@language',
          class: 'selectLangField',
          options: language,
          '@change': true,
        },
      ],
    },
    publisher: {
      identifier: 'publisher',
      name: 'dct:publisher',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: {voc: 'Search Vocabulary', man: 'Manually submit information'},
      data: {
        voc: [
          {
            identifier: 'publisher',
            type: 'autocomplete-input',
            name: '@id',
            voc: 'corporate-body',
            '@change': true,
          }
        ],
        man: [
          {
            identifier: 'publisher',
            type: 'group',
            name: 'dct:publisher',
            '@change': true,
            children: [
              {
                identifier: 'publisherName',
                type: 'text',
                name: 'foaf:name',
                '@change': true,
              },
              {
                identifier: 'publisherEmail',
                type: 'email',
                name: 'foaf:mbox',
                '@change': true,
              },
              {
                identifier: 'publisherHomepage',
                type: 'custom-url',
                name: 'foaf:homepage',
                '@change': true,
              }
            ]
          }
        ],
      }
    },
    spatial: {
      identifier: 'spatial',
      type: 'conditional-input',
      name: 'dct:spatial',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'spatialVocabulary',
            type: 'conditional-input',
            name: 'dct:spatial',
            options: {
              continent: 'Continent',
              country: 'Country',
              place: 'Place',
            },
            '@change': true,
            data: {
              continent: [
                {
                  identifier: 'spatialContinent',
                  type: 'autocomplete-input',
                  voc: 'continent',
                  name: '@id',
                  '@change': true,
                },
              ],
              country: [
                {
                  identifier: 'spatialCountry',
                  type: 'autocomplete-input',
                  voc: 'country',
                  name: '@id',
                  '@change': true,
                },
              ],
              place: [
                {
                  identifier: 'spatialPlace',
                  type: 'autocomplete-input',
                  voc: 'place',
                  name: '@id',
                  '@change': true,
                },
              ],
            },
          },
        ],
        man: [
          {
            identifier: 'spatialUrl',
            type: 'custom-url',
            name: '@id',
            validation: 'optional|url',
            '@change': true,
          },
        ],
      },
    },
    temporal: {
      type: 'group',
      name: 'dct:temporal',
      identifier: 'temporal',
      class: 'property besides startEndDate',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'temporalRange',
          type: 'datetime-picker',
          name: 'dct:temporal',
          property:'dct:temporal',
          end: 'dct:temporal',
          '@change': true,
        }]
      // children: [
      //   {
      //     identifier: 'temporalStart',
      //     type: 'datetime-picker',
      //     name: 'dcat:startDate',
      //     '@change': true,
      //   },
      //   {
      //     identifier: 'temporalEnd',
      //     type: 'datetime-picker',
      //     name: 'dcat:endDate',
      //     '@change': true,
      //   },
      // ],
    },
    theme: {
      identifier: 'theme',
      type: 'autocomplete-input',
      multiple: true,
      annifTheme: true,
      voc: 'data-theme',
      name: 'dcat:theme',
      class: 'property',
      '@change': true,
      '@annifSuggestion': false,
    },
    accessRights: {
      identifier: 'accessRights',
      type: 'autocomplete-input',
      voc: 'access-right',
      name: 'dct:accessRights',
      class: 'property',
      '@change': true,
    },
    creator: {
      identifier: 'creator',
      type: 'group',
      name: 'dct:creator',
      class: 'property',
      children: [
        {
          identifier: 'creatorType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'foaf:Person': 'Person',
            'foaf:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'creatorName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'creatorEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'creatorHomepage',
          type: 'custom-url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    conformsTo: {
      identifier: 'conformsTo',
      type: 'group',
      name: 'dct:conformsTo',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'conformsToTitle',
          type: 'text',
          name: 'rdfs:label',
          '@change': true,
        },
        {
          identifier: 'conformsToUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    page: {
      identifier: 'page',
      type: 'group',
      name: 'foaf:page',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'pageTitle',
          type: 'group',
          name: 'dct:title',
          '@change': true,
          class: 'property langStringInput',
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'title',
              type: 'text',
              name: '@value',
              class: 'w-100 inputTextfield',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              options: language,
              name: '@language',
              class: 'selectLangField',
              '@change': true,
            },
          ]
        },
        {
          identifier: 'pageDescription',
          type: 'group',
          name: 'dct:description',
          '@change': true,
          class: 'property langDescriptionInput',
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'description',
              type: 'textarea',
              name: '@value',
              class: 'inputTextfield w-100',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              options: language,
              name: '@language',
              class: 'selectLangField',
              '@change': true,
            },
          ]
        },
        {
          identifier: 'pageFormat',
          type: 'autocomplete-input',
          voc: 'file-type',
          name: 'dct:format',
          class: "property",
          '@change': true,
        },
        {
          identifier: 'pageUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          class: "property",
          '@change': true,
        },
      ],
    },
    accrualPeriodicity: {
      identifier: 'accrualPeriodicity',
      type: 'autocomplete-input',
      voc: 'frequency',
      name: 'dct:accrualPeriodicity',
      class: 'property',
      '@change': true,

    },
    hasVersion: {
      type: 'group',
      identifier: 'hasVersion',
      name: 'dct:hasVersion',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'hasVersionUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    isVersionOf: {
      type: 'group',
      identifier: 'isVersionOf',
      name: 'dct:isVersionOf',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'isVersionOfUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    source: {
      type: 'group',
      repeatable: true,
      '@repeatableRemoved': true,
      identifier: 'source',
      name: 'dct:source',
      class: 'property',
      children: [
        {
          name: '@id',
          identifier: 'sourceUrl',
          type: 'custom-url',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    identifier: {
      type: 'group',
      class: 'property',
      name: 'dct:identifier',
      identifier: 'identifier',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'identifier',
          name: '@value',
          type: 'text',
          '@change': true,
        },
      ],
    },
    isReferencedBy: {
      type: 'group',
      identifier: 'isReferencedBy',
      name: 'dct:isReferencedBy',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'isReferencedByUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    landingPage: {
      type: 'group',
      identifier: 'landingPage',
      name: 'dcat:landingPage',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'landingPageUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      name: 'dct:language',
      class: 'property',
      multiple: true,
      voc: 'language',
      '@change': true,
    },
    admsIdentifier: {
      type: 'group',
      class: 'property',
      name: 'adms:identifier',
      identifier: 'admsIdentifier',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'admsIdentifierUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
        {
          identifier: 'admsIdentifierSkosNotation',
          type: 'group',
          name: 'skos:notation',
          children: [
            {
              identifier: 'admsIdentifierValue',
              type: 'text',
              name: '@value',
              '@change': true,
            },
            {
              identifier: 'admsIdentifierType',
              type: 'autocomplete-input',
              voc: 'notation-type',
              name: '@type',
              '@change': true,
            },
          ],
        },
      ],
    },
    provenance: {
      type: 'group',
      identifier: 'provenance',
      name: 'dct:provenance',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'provenance',
          type: 'text',
          name: 'rdfs:label',
          '@change': true,
        },
      ],
    },
    qualifiedAttribution: {
      type: 'group',
      identifier: 'qualifiedAttribution',
      name: 'prov:qualifiedAttribution',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'qualifiedAttributionUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    wasGeneratedBy: {
      type: 'group',
      identifier: 'wasGeneratedBy',
      name: 'prov:wasGeneratedBy',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'wasGeneratedByUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    qualifiedRelation: {
      type: 'group',
      identifier: 'qualifiedRelation',
      name: 'dcat:qualifiedRelation',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'qualifiedRelationUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    relation: {
      type: 'group',
      identifier: 'relation',
      name: 'dct:relation',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'relationUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    issued: {
      identifier: 'issued',
      name: 'dct:issued',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date-picker',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'datetime-picker',
            '@change': true,
          },
        ],
      },
    },
    modified: {
      identifier: 'modified',
      name: 'dct:modified',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date-picker',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'datetime-picker',
            '@change': true,
          },
        ],
      },
    },
    spatialResolutionInMeters: {
      identifier: 'spatialResolutionInMeters',
      type: 'number',
      name: 'dcat:spatialResolutionInMeters',
      class: 'property',
      validation: 'number',
      '@change': true,
    },
    temporalResolution: {
      identifier: 'temporalResolution',
      type: 'group',
      name: 'dcat:temporalResolution',
      class: 'property tempResWrapper',
      '@change': true,
      children: [
        {
          identifier: 'temporalResolutionYear',
          type: 'number',
          validation: 'min:1950|max:2100|optional',
          "validation-behavior": 'live',
          '@change': true,
          name: 'Year',
        },
        {
          identifier: 'temporalResolutionMonth',
          type: 'number',
          validation: 'min:1|max:12|optional',
          "validation-behavior": 'live',         
          '@change': true,
          name: 'Month',
        },
        {
          identifier: 'temporalResolutionDay',
          type: 'number',
          validation: 'min:1|max:31|optional',
          "validation-behavior": 'live',        
          '@change': true,
          name: 'Day',
        },
        {
          identifier: 'temporalResolutionHour',
          type: 'number',
          validation: 'min:0|max:23|optional',
          "validation-behavior": 'live',      
          '@change': true,
          name: 'Hour',
        },
        {
          identifier: 'temporalResolutionMinute',
          type: 'number',
          validation: 'min:0|max:59|optional',
          "validation-behavior": 'live',    
          '@change': true,
          name: 'Minute',
        },
        {
          identifier: 'temporalResolutionSecond',
          type: 'number',
          validation: 'min:0|max:59|optional',
          "validation-behavior": 'live',       
          '@change': true,
          name: 'Second',
        },
      ],
    },
    type: {
      identifier: 'type',
      type: 'autocomplete-input',
      voc: 'dataset-type',
      name: 'dct:type',
      class: 'property',
      '@change': true,
    },
    versionInfo: {
      identifier: 'versionInfo',
      type: 'text',
      name: 'owl:versionInfo',
      class: 'property',
      '@change': true,
    },
    versionNotes: {
      identifier: 'versionNotes',
      type: 'group',
      name: 'adms:versionNotes',
      class: 'property langDescriptionInput',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'versionNotes',
          type: 'textarea',
          name: '@value',
          class: 'inputTextfield w-100',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          name: '@language',
          options: language,
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    catalog: {
      identifier: 'catalog',
      type: 'select',
      name: 'dct:catalog',
      class: 'property mandatory',
      validation: 'required',
      mandatory: true,
      options: {},
      '@change': true,
    },
    isUsedBy: {
      type: 'group',
      identifier: 'isUsedBy',
      name: 'dext:metadataExtension',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          type: 'custom-url',
          identifier: 'isUsedBy',
          validation: 'optional|url',
          '@change': true,
          name: 'dext:isUsedBy',
        },
      ],
    },
  },
  distributions: {
    licenseAttributionByText: {
      identifier: 'licenseAttributionByText',
      type: 'group',
      name: 'dcatde:licenseAttributionByText',
      class: 'property langStringInput',
      '@dcatDE': true,
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'licenseAttributionByTextTitle',
          type: 'textarea',
          name: '@value',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    accessURL: {
      identifier: 'accessUrl',
      name: 'dcat:accessURL',
      type: 'group',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      validation: 'required',
      minimum: 1,
      class: 'property',
      children: [
        {
          identifier: 'accessUrl',
          name: '@id',
          type: 'conditional-input',
          '@change': true,
          options: { url: 'Provide an URL', file: 'Upload a file' },
          data: {
            url: [
              {
                identifier: 'accessUrlLink',
                type: 'custom-url',
                name: '@id',
                '@change': true,
                validation: 'required|url',
              },
            ],
            file: [
              {
                identifier: 'accessUrlFile',
                type: 'fileupload',
                name: '@id',
                '@change': true,
                validation: 'required',
              },
            ],
          },
        },
      ],
    },
    availability: {
      identifier: 'availability',
      type: 'autocomplete-input',
      voc: 'planned-availability',
      name: 'dcatap:availability',
      class: 'property',
      '@change': true,
    },
    description: {
      identifier: 'description',
      type: 'group',
      name: 'dct:description',
      class: 'property langDescriptionInput',
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          class: 'inputTextfield',
          '@change': true,
        },
        {
          identifier: 'descriptionLanguage',
          value: 'de',
          type: 'select',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    format: {
      identifier: 'format',
      type: 'autocomplete-input',
      class: 'property',
      voc: 'file-type',
      name: 'dct:format',
      '@change': true,
    },
    license: {
      identifier: 'licence',
      type: 'autocomplete-input',
      name: 'dct:license',
      '@change': true,
      class: 'property',
      voc: 'licenses'
    },
    title: {
      identifier: 'title',
      type: 'group',
      name: 'dct:title',
      class: 'property langStringInput',
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'title',
          type: 'text',
          name: '@value',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          name: '@language',
          class: 'selectLangField',
          '@change': true,
        },
      ],
    },
    mediaType: {
      identifier: 'mediaType',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:mediaType',
      class: 'property',
      '@change': true,
    },
    downloadUrl: {
      type: 'group',
      identifier: 'downloadUrl',
      repeatable: true,
      name: 'dcat:downloadURL',
      '@repeatableRemoved': true,
      class: 'property',
      children: [
        {
          identifier: 'downloadUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    availabilityDisDE: {
      identifier: 'availabilityDisDE',
      type: 'autocomplete-input',
      name: 'dcatap:availability',
      class: 'property',
      voc: 'planned-availability',
      '@dcatDE': true,
      '@change': true,
    },
    accessService: {
      identifier: 'accessService',
      type: 'group',
      name: 'dcat:accessService',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'accessServiceEndpointURL',
          type: 'custom-url',
          name: 'dcat:endpointURL',
          class: 'main property',
          validation: 'optional|url',
          '@change': true,
        },
        {
          identifier: 'accessServiceEndpointDescription',
          type: 'textarea',
          name: 'dcat:endpointDescription',
          class: 'main',
          '@change': true,
        },
        {
          identifier: 'accessServiceTitle',
          type: 'group',
          name: 'dct:title',
          class: 'property langStringInput',
          '@change': true,
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'title',
              type: 'text',
              name: '@value',
              class: 'w-100 inputTextfield',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              name: '@language',
              class: 'selectLangField',
              options: language,
              '@change': true,
            },
          ],
        },
        {
          identifier: 'accessServiceDescription',
          type: 'group',
          name: 'dct:description',
          class: 'property langDescriptionInput',
          '@change': true,
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'description',
              type: 'textarea',
              name: '@value',
              class: 'main inputTextfield',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              name: '@language',
              class: 'selectLangField',
              options: language,
              '@change': true,
            },
          ],
        },
      ],
    },
    byteSize: {
      identifier: 'byteSize',
      type: 'text',
      name: 'dcat:byteSize',
      class: 'property',
      '@change': true,
    },
    checksum: {
      type: 'group',
      identifier: 'checksum',
      name: 'spdx:checksum',
      class: 'property',
      children: [
        {
          identifier: 'checksum',
          type: 'text',
          name: 'spdx:checksumValue',
          '@change': true,
        },
        {
          identifier: 'checksumAlgorithm',
          type: 'autocomplete-input',
          voc: 'spdx-checksum-algorithm',
          name: 'spdx:algorithm',
          '@change': true,
        },
      ],
    },
    compressFormat: {
      identifier: 'compressFormat',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:compressFormat',
      class: 'property',
      '@change': true,
    },
    packageFormat: {
      identifier: 'packageFormat',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:packageFormat',
      class: 'property',
      '@change': true,
    },
    page: {
      identifier: 'page',
      type: 'group',
      name: 'foaf:page',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'pageTitle',
          type: 'group',
          name: 'dct:title',
          '@change': true,
          class: 'property langStringInput',
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'title',
              type: 'text',
              name: '@value',
              class: 'w-100 inputTextfield',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              options: language,
              name: '@language',
              class: 'selectLangField',
              '@change': true,
            },
          ]
        },
        {
          identifier: 'pageDescription',
          type: 'group',
          name: 'dct:description',
          '@change': true,
          class: 'property langDescriptionInput',
          repeatable: true,
          '@repeatableRemoved': true,
          children: [
            {
              identifier: 'description',
              type: 'textarea',
              name: '@value',
              class: 'inputTextfield w-100',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'de',
              type: 'select',
              options: language,
              name: '@language',
              class: 'selectLangField',
              '@change': true,
            },
          ]
        },
        {
          identifier: 'pageFormat',
          type: 'autocomplete-input',
          voc: 'file-type',
          name: 'dct:format',
          '@change': true,
        },
        {
          identifier: 'pageUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    hasPolicy: {
      identifier: 'hasPolicy',
      type: 'group',
      class: 'property',
      name: 'odrl:hasPolicy',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'hasPolicyUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      multiple: true,
      name: 'dct:language',
      voc: 'language',
      class: 'property',
      '@change': true,
    },
    conformsTo: {
      identifier: 'conformsTo',
      type: 'group',
      name: 'dct:conformsTo',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'conformsToTitle',
          type: 'text',
          name: 'rdfs:label',
          class: 'main',
          '@change': true,
        },
        {
          identifier: 'conformsToUrl',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    issued: {
      identifier: 'issued',
      name: 'dct:issued',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date-picker',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'datetime-picker',
            '@change': true,
          },
        ],
      },
    },
    modified: {
      identifier: 'modified',
      name: 'dct:modified',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date-picker',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'datetime-picker',
            '@change': true,
          },
        ],
      },
    },
    rights: {
      identifier: 'rights',
      type: 'conditional-input',
      name: 'dct:rights',
      class: 'property',
      '@change': true,
      options: { url: 'URL', str: 'String' },
      data: {
        url: [
          {
            name: 'rdfs:label',
            identifier: 'rightsUrl',
            type: 'custom-url',
            '@change': true,
            validation: 'optional|url'
          }
        ],
        str: [
          {
            name: 'rdfs:label',
            identifier: 'rightsString',
            type: 'text',
            '@change': true,
            validation: 'optional'
          }
        ]
      }
    },
    spatialResolutionInMeters: {
      identifier: 'spatialResolutionInMeters',
      type: 'number',
      name: 'dcat:spatialResolutionInMeters',
      class: 'property',
      validation: 'number',
      '@change': true,
    },
    temporalResolution: {
      identifier: 'temporalResolution',
      type: 'group',
      name: 'dcat:temporalResolution',
      class: 'property tempResWrapper',
      '@change': true,
      children: [
        {
          identifier: 'temporalResolutionYear',
          type: 'custom-number',
          min: 0,
          max: 2023,
          '@change': true,
          name: 'Year',
        },
        {
          identifier: 'temporalResolutionMonth',
          type: 'custom-number',
          min: 0,
          max: 12,
          '@change': true,
          name: 'Month',
        },
        {
          identifier: 'temporalResolutionDay',
          type: 'custom-number',
          min: 0,
          max: 31,
          '@change': true,
          name: 'Day',
        },
        {
          identifier: 'temporalResolutionHour',
          type: 'custom-number',
          min: 0,
          max: 23,
          '@change': true,
          name: 'Hour',
        },
        {
          identifier: 'temporalResolutionMinute',
          type: 'custom-number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Minute',
        },
        {
          identifier: 'temporalResolutionSecond',
          type: 'custom-number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Second',
        },
      ],
    },
    type: {
      identifier: 'type',
      type: 'autocomplete-input',
      voc: 'distribution-type',
      name: 'dct:type',
      class: 'property',
      '@change': true,
    },
    status: {
      identifier: 'status',
      type: 'autocomplete-input',
      voc: 'dataset-status',
      name: 'adms:status',
      class: 'property',
      '@change': true,
    },
  },
  catalogues: {
    availabilityCatDE: {
      identifier: 'availabilityCatDE',
      type: 'autocomplete-input',
      name: 'dcatap:availability',
      class: 'property',
      voc: 'planned-availability',
      '@dcatDE': true,
      '@change': true,
    },
    datasetID: {
      identifier: 'datasetID',
      type: 'unique-identifier-input',
      name: 'datasetID',
      class: 'property',
      mandatory: true,
      '@change': true,
    },
    title: {
      identifier: 'title',
      mandatory: true,
      type: 'group',
      name: 'dct:title',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'title',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          validation: 'required',
          options: language,
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    description: {
      identifier: 'description',
      type: 'group',
      name: 'dct:description',
      class: 'property langDescriptionInput',
      mandatory: true,
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'w-100 inputTextfield',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'de',
          type: 'select',
          options: language,
          validation: 'required',
          name: '@language',
          class: 'selectLangFieldScnd',
          '@change': true,
        },
      ],
    },
    publisher: {
      identifier: 'publisher',
      name: 'dct:publisher',
      class: 'property',
      type: 'conditional-input',
      validation: 'required',
      '@change': true,
      options: {voc: 'Search Vocabulary', man: 'Manually submit information'},
      data: {
        voc: [
          {
            identifier: 'publisher',
            type: 'autocomplete-input',
            name: '@id',
            voc: 'corporate-body',
            '@change': true,
          }
        ],
        man: [
          {
            identifier: 'publisher',
            type: 'group',
            name: 'dct:publisher',
            '@change': true,
            children: [
              {
                identifier: 'publisherName',
                type: 'text',
                name: 'foaf:name',
                '@change': true,
              },
              {
                identifier: 'publisherEmail',
                type: 'email',
                name: 'foaf:mbox',
                '@change': true,
              },
              {
                identifier: 'publisherHomepage',
                type: 'custom-url',
                name: 'foaf:homepage',
                '@change': true,
              }
            ]
          }
        ],
      }
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      name: 'dct:language',
      class: 'property',
      multiple: true,
      validation: "required",
      mandatory: true,
      minimum: 1,
      voc: 'language',
      '@change': true,
    },
    licence: {
      identifier: 'licence',
      type: 'conditional-input',
      name: 'dct:license',
      '@change': true,
      class: 'property',
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'licenceVocabulary',
            type: 'autocomplete-input',
            voc: 'licence',
            name: '@id',
            '@change': true,
          },
        ],
        man: [
          {
            identifier: 'licenceDetails',
            type: 'group',
            name: 'dct:license',
            '@change': true,
            children: [
              {
                identifier: 'licenceTitle',
                type: 'text',
                name: 'dct:title',
                '@change': true,
              },
              {
                identifier: 'licenceDescription',
                type: 'textarea',
                name: 'skos:prefLabel',
                '@change': true,
              },
              {
                identifier: 'licenceURL',
                type: 'custom-url',
                name: 'skos:exactMatch',
                validation: 'optional|url',
                '@change': true,
              },
            ],
          },
        ],
      },
    },
    spatial: {
      identifier: 'spatial',
      type: 'conditional-input',
      name: 'dct:spatial',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true,
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'spatialVocabulary',
            type: 'conditional-input',
            name: 'dct:spatial',
            options: {
              continent: 'Continent',
              country: 'Country',
              place: 'Place',
            },
            '@change': true,
            data: {
              continent: [
                {
                  identifier: 'spatialContinent',
                  type: 'autocomplete-input',
                  voc: 'continent',
                  name: '@id',
                  '@change': true,
                },
              ],
              country: [
                {
                  identifier: 'spatialCountry',
                  type: 'autocomplete-input',
                  voc: 'country',
                  name: '@id',
                  '@change': true,
                },
              ],
              place: [
                {
                  identifier: 'spatialPlace',
                  type: 'autocomplete-input',
                  voc: 'place',
                  name: '@id',
                  '@change': true,
                },
              ],
            },
          },
        ],
        man: [
          {
            identifier: 'spatialUrl',
            type: 'custom-url',
            name: '@id',
            validation: 'optional|url',
            '@change': true,
          },
        ],
      },
    },
    homepage: {
      identifier: 'homepage',
      type: 'custom-url',
      name: 'foaf:homepage',
      class: 'property',
      validation: 'optional|url',
      '@change': true,
    },
    hasPart: {
      type: 'group',
      identifier: 'hasPart',
      name: 'dct:hasPart',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'hasPartURL',
          type: 'custom-url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    isPartOf: {
      identifier: 'isPartOf',
      name: 'dct:isPartOf',
      class: 'property',
      type: 'custom-url',
      validation: 'optional|url',
      '@change': true
    },
    rights: {
      identifier: 'rights',
      type: 'conditional-input',
      name: 'dct:rights',
      class: 'property',
      '@change': true,
      options: { url: 'URL', str: 'String' },
      data: {
        url: [
          {
            name: 'rdfs:label',
            identifier: 'rightsUrl',
            type: 'custom-url',
            '@change': true,
            validation: 'optional|url'
          }
        ],
        str: [
          {
            name: 'rdfs:label',
            identifier: 'rightsString',
            type: 'text',
            '@change': true,
            validation: 'optional'
          }
        ]
      }
    },
    catalog: {
      type: 'group',
      repeatabale: true,
      identifier: 'catalog',
      name: 'dcat:catalog',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true,
      children: [
        {
          identifier: 'catalogURL',
          type: 'custom-url',
          validation: 'optional|url',
          '@change': true,
          name: '@id',
        },
      ],
    },
    creator: {
      identifier: 'creator',
      type: 'group',
      name: 'dct:creator',
      class: 'property',
      children: [
        {
          identifier: 'creatorType',
          type: 'select',
          name: 'rdf:type',
          options: {
            '': '---',
            'foaf:Person': 'Person',
            'foaf:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'creatorName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'creatorEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'creatorHomepage',
          type: 'custom-url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
  }
};

// Dynamically add a collapsed property to all fields that are component of
// a set of specific pages steps.
['datasets', 'distributions'].forEach((type) => {
  [].concat(
    // advised and additional fields for datasets/distributions
    Object.keys(config?.[type].step2),
    Object.keys(config?.[type].step3),
  ).forEach((key) => {
    dcatapProperties[type][key].collapsed = true;
  });
})

export default dcatapProperties;
